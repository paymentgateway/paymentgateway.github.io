{
    "docs": [
        {
            "location": "/", 
            "text": "Pendahuluan\n\n\nKami menyediakan akses ke berbagai billers dan produk pembayaran modern di Indonesia dalam bentuk backend payment gateway. Panduan ini kami sediakan untuk pengguna umum dan juga developer yang membuat aplikasi.\n\n\nMulai Bekerja\n\n\nBagi Anda yang belum memiliki akun dan ingin memulai, silakan mempelajari \npanduan pengguna\n.\n\n\nAPI\n\n\nDeveloper yang ingin melakukan integrasi aplikasi dengan backend kami dapat mempelajari dokumentasi \nAPI\n kami. Anda dapat membuat aplikasi dengan tools programming apa saja yang penting sudah mendukung REST dengan protokol HTTP/HTTPS.", 
            "title": "Home"
        }, 
        {
            "location": "/#pendahuluan", 
            "text": "Kami menyediakan akses ke berbagai billers dan produk pembayaran modern di Indonesia dalam bentuk backend payment gateway. Panduan ini kami sediakan untuk pengguna umum dan juga developer yang membuat aplikasi.", 
            "title": "Pendahuluan"
        }, 
        {
            "location": "/#mulai-bekerja", 
            "text": "Bagi Anda yang belum memiliki akun dan ingin memulai, silakan mempelajari  panduan pengguna .", 
            "title": "Mulai Bekerja"
        }, 
        {
            "location": "/#api", 
            "text": "Developer yang ingin melakukan integrasi aplikasi dengan backend kami dapat mempelajari dokumentasi  API  kami. Anda dapat membuat aplikasi dengan tools programming apa saja yang penting sudah mendukung REST dengan protokol HTTP/HTTPS.", 
            "title": "API"
        }, 
        {
            "location": "/userguide/", 
            "text": "Panduan Pengguna\n\n\nMembuat Akun\n\n\nSeluruh pengguna membutuhkan sebuah akun untuk melakukan transaksi dengan kami. Akun ini dapat anda peroleh dengan melakukan \npendaftaran\n.\n\n\nPersyaratan Umum\n\n\n\n\n\n\n\n\nPersyaratan\n\n\nPerorangan\n\n\nPerusahaan\n\n\n\n\n\n\n\n\n\n\nKTP Pemilik\n\n\nY\n\n\nY\n\n\n\n\n\n\nNPWP Pribadi\n\n\nY\n\n\nY\n\n\n\n\n\n\nAkte Notaris\n\n\n\n\nY\n\n\n\n\n\n\nSK Kemenkumham\n\n\n\n\nY\n\n\n\n\n\n\nSIUP\n\n\n\n\nY\n\n\n\n\n\n\nTDP\n\n\n\n\nY\n\n\n\n\n\n\nNPWP Perusahaan\n\n\n\n\nY\n\n\n\n\n\n\n\n\nVerifikasi dokumen-dokumen Anda membutuhkan waktu 1-3 hari kerja.\n\n\nDeposit\n\n\nUntuk melakukan transaksi, Anda perlu menambahkan saldo deposit terlebih dahulu. Saldo deposit dapat Anda tambahkan melalui menu Tambah Saldo di akun Anda. Kami menerima penambahan saldo melalui internet banking \n ATM.\n\n\nProses deposit dilakukan otomatis oleh sistem sehingga Anda dapat melakukan deposit kapan saja (24 jam) tanpa harus melakukan konfirmasi ke bagian Administrasi. Namun disarankan Anda melakukan transaksi di luar jam cutoff sistem internet banking, sebab transaksi pada waktu cutoff dapat menyebabkan dana tidak kami terima.\n\n\nTambah Saldo dari Internet Banking\n\n\nTambah Saldo dari ATM\n\n\nBillers\n\n\nBillers adalah pihak (perusahaan) yang menyediakan produk dan/atau menerbitkan tagihan. Status billers dapat Anda lihat di menu Billers. Jika status billers online, kita dapat melakukan pembayaran ke billers tersebut. Jika offline, pembayaran akan ditolak.\n\n\nContoh billers yang ada dalam sistem kami:\n\n\n\n\n\n\n\n\nBillers\n\n\nPascabayar\n\n\nPrabayar\n\n\n\n\n\n\n\n\n\n\nPLN\n\n\nY\n\n\nY\n\n\n\n\n\n\nTelkom\n\n\nY\n\n\nY\n\n\n\n\n\n\nPDAM\n\n\nY\n\n\n\n\n\n\n\n\nTelkomsel\n\n\nY\n\n\nY\n\n\n\n\n\n\nXL Axiata\n\n\nY\n\n\nY\n\n\n\n\n\n\nIndosat\n\n\nY\n\n\nY\n\n\n\n\n\n\n\n\nPelanggan (Consumer)\n\n\nPelanggan adalah semua pihak yang menggunakan produk billers baik berlangganan maupun tidak, baik perorangan maupun organisasi. ID Pelanggan pada umumnya memiliki panjang 10 sampai dengan 20 digit, tergantung billers masing-masing.\n\n\nAgen\n\n\nAgen adalah pihak yang mewakili billers atau principal untuk menerima pembayaran dari pelanggan. Nilai pembayaran yang dititipkan kepada agen harus sesuai dengan jumlah total bayar yang dikeluarkan oleh biller. Dari setiap transaksi, agen mendapatkan fee yaitu Agent Fee yang diambil dari Admin Fee (Biaya Transaksi).\n\n\nProduk\n\n\nProduk pembayaran umumnya ada 2 jenis yaitu Pascabayar (post-paid) atau prabayar (pre-paid). Nilai transaksi pada produk pascabayar tergantung dari nilai tagihan masing-masing pelanggan. Nilai transaksi pada produk pascabayar biasanya sudah tertentu dalam nominal yang baku misalnya 5000, 10000, 20000 dan seterusnya.\n\n\nProduk memiliki atribut berikut:\n\n\nProduct ID\n\n\nSetiap produk atau layanan memiliki satu Product ID. Misalnya \npln-1600\n untuk Pembayaran PLN Admin 1600, atau \npln-2000\n untuk Pembayaran PLN Admin 2000.\n\n\nBiller ID\n\n\nBiller ID adalah kode biller/penerbit tagihan/pemilik produk. Misalnya: \npln\n untuk PLN, \ntelkom\n untuk Telkom, \nisat\n untuk Indosat.\n\n\nBill Amount/Jumlah Tagihan\n\n\nBill Amount adalah jumlah tagihan yang dikirim kepada pihak biller (pascabayar) atau biaya yang dibayarkan oleh pelanggan (prabayar). Untuk produk pascabayar, Bill Amount selalu \n0\n (nol). Untuk produk prabayar, nilai tagihannya adalah nominal prabayarnya.\n\n\nAdmin Fee/Biaya Transaksi\n\n\nAdmin Fee adalah biaya admin/fee transaksi sebagai biaya jasa kepada agen/mitra switching. Untuk produk Pascabayar, Biaya Admin ditambahkan ke nilai tagihan (fee eksklusif atau di luar nilai tagihan). Namun untuk produk prabayar, biasanya Admin Fee sudah termasuk dalam nominal prabayarnya (fee inklusif).\n\n\nDiskon Channel\n\n\nDiskon Channel adalah potongan yang diberikan kepada pelanggan untuk mengurangi nilai Total Bayar.\n\n\nAgent Fee\n\n\nAgent Fee adalah potongan yang diberikan kepada agen/mitra. Agent Fee diberikan langsung pada saat transaksi sehingga deposit yang dipotong lebih kecil dari nilai Total Bayar.\n\n\nTotal Bayar (Consumer)\n\n\nTotal Bayar adalah nilai yang dibayarkan pelanggan kepada agen/mitra. Untuk produk prabayar, ini adalah Harga Jual. Total Bayar untuk produk Pasca Bayar. Nilainya mengikuti persamaan berikut:\n\n\nTotal Bayar = Jumlah Tagihan + Admin Fee - Diskon Channel\n\n\n\nTotal Debit (Agen)\n\n\nAgent Price adalah nilai deposit yang dipotong untuk tiap transaksi. Nilainya mengikuti persamaan berikut:\n\n\nTotal Debit = Total Bayar - Agent Fee\n\n\n\natau dalam bentuk lainnya:\n\n\nTotal Debit = Jumlah Tagihan + Admin Fee - Diskon Channel - Agent Fee\n\n\n\nTransaksi\n\n\nTransaksi melalui REST API dilakukan dengan pola request-response. Untuk produk pascabayar dilakukan dengan 2 langkah yaitu \ninquiry\n kemudian \npayment\n. Untuk produk prabayar/pembelian, dilakukan dengan 1 langkah saja yaitu \npayment\n.\n\n\nInquiry\n\n\nFungsi \ninquiry\n adalah melakukan cek tagihan terakhir untuk pelanggan tertentu dan biller tertentu. Jika ada tagihan, maka fungsi \ninquiry\n akan memberikan respon berisi data tagihan yang harus dibayar. Bagi pelanggan yang ada tunggakan tagihan, maka \ninquiry\n menghasilkan lebih dari 1 tagihan.\n\n\nFungsi \ninquiry\n tidak memotong saldo mitra/agen.\n\n\nPayment\n\n\nFungsi \npayment\n adalah melakukan pembayaran kepada billers untuk pelanggan tersebut sehingga status pembayaran menjadi lunas. Nilai transaksinya sesuai dengan total jumlah tagihan termasuk tunggakan.\n\n\nReceipt\n\n\nJika pembayaran berhasil dilakukan, maka pelanggan dapat menerima receipt/struk pembayarannya. Data receipt dikirim bersama respon fungsi \npayment\n. Namun jika dibutuhkan fungsi \nreceipt\n dapat digunakan untuk memperoleh data receipt/pembayaran.\n\n\nHelpdesk\n\n\nJika Anda mengalami kendala dalam menggunakan layanan ini, kami menyediakan helpdesk yang bisa Anda akses melalui akun Anda.\n\n\nResolusi Transaksi\n\n\nUntuk setiap transaksi yang suspect, sistem kami secara otomatis melakukan resolusi ke pihak billers. Namun jika dibutuhkan, silakan gunakan menu Resolusi Transaksi untuk menyelesaikan permasalahan yang berkaitan dengan transaksi.\n\n\nTiket\n\n\nJika Anda membutuhkan bantuan atau konsultasi, silakan gunakan menu tiket Helpdesk kami.", 
            "title": "Panduan"
        }, 
        {
            "location": "/userguide/#panduan-pengguna", 
            "text": "", 
            "title": "Panduan Pengguna"
        }, 
        {
            "location": "/userguide/#membuat-akun", 
            "text": "Seluruh pengguna membutuhkan sebuah akun untuk melakukan transaksi dengan kami. Akun ini dapat anda peroleh dengan melakukan  pendaftaran .", 
            "title": "Membuat Akun"
        }, 
        {
            "location": "/userguide/#persyaratan-umum", 
            "text": "Persyaratan  Perorangan  Perusahaan      KTP Pemilik  Y  Y    NPWP Pribadi  Y  Y    Akte Notaris   Y    SK Kemenkumham   Y    SIUP   Y    TDP   Y    NPWP Perusahaan   Y     Verifikasi dokumen-dokumen Anda membutuhkan waktu 1-3 hari kerja.", 
            "title": "Persyaratan Umum"
        }, 
        {
            "location": "/userguide/#deposit", 
            "text": "Untuk melakukan transaksi, Anda perlu menambahkan saldo deposit terlebih dahulu. Saldo deposit dapat Anda tambahkan melalui menu Tambah Saldo di akun Anda. Kami menerima penambahan saldo melalui internet banking   ATM.  Proses deposit dilakukan otomatis oleh sistem sehingga Anda dapat melakukan deposit kapan saja (24 jam) tanpa harus melakukan konfirmasi ke bagian Administrasi. Namun disarankan Anda melakukan transaksi di luar jam cutoff sistem internet banking, sebab transaksi pada waktu cutoff dapat menyebabkan dana tidak kami terima.  Tambah Saldo dari Internet Banking  Tambah Saldo dari ATM", 
            "title": "Deposit"
        }, 
        {
            "location": "/userguide/#billers", 
            "text": "Billers adalah pihak (perusahaan) yang menyediakan produk dan/atau menerbitkan tagihan. Status billers dapat Anda lihat di menu Billers. Jika status billers online, kita dapat melakukan pembayaran ke billers tersebut. Jika offline, pembayaran akan ditolak.  Contoh billers yang ada dalam sistem kami:     Billers  Pascabayar  Prabayar      PLN  Y  Y    Telkom  Y  Y    PDAM  Y     Telkomsel  Y  Y    XL Axiata  Y  Y    Indosat  Y  Y", 
            "title": "Billers"
        }, 
        {
            "location": "/userguide/#pelanggan-consumer", 
            "text": "Pelanggan adalah semua pihak yang menggunakan produk billers baik berlangganan maupun tidak, baik perorangan maupun organisasi. ID Pelanggan pada umumnya memiliki panjang 10 sampai dengan 20 digit, tergantung billers masing-masing.", 
            "title": "Pelanggan (Consumer)"
        }, 
        {
            "location": "/userguide/#agen", 
            "text": "Agen adalah pihak yang mewakili billers atau principal untuk menerima pembayaran dari pelanggan. Nilai pembayaran yang dititipkan kepada agen harus sesuai dengan jumlah total bayar yang dikeluarkan oleh biller. Dari setiap transaksi, agen mendapatkan fee yaitu Agent Fee yang diambil dari Admin Fee (Biaya Transaksi).", 
            "title": "Agen"
        }, 
        {
            "location": "/userguide/#produk", 
            "text": "Produk pembayaran umumnya ada 2 jenis yaitu Pascabayar (post-paid) atau prabayar (pre-paid). Nilai transaksi pada produk pascabayar tergantung dari nilai tagihan masing-masing pelanggan. Nilai transaksi pada produk pascabayar biasanya sudah tertentu dalam nominal yang baku misalnya 5000, 10000, 20000 dan seterusnya.  Produk memiliki atribut berikut:  Product ID  Setiap produk atau layanan memiliki satu Product ID. Misalnya  pln-1600  untuk Pembayaran PLN Admin 1600, atau  pln-2000  untuk Pembayaran PLN Admin 2000.  Biller ID  Biller ID adalah kode biller/penerbit tagihan/pemilik produk. Misalnya:  pln  untuk PLN,  telkom  untuk Telkom,  isat  untuk Indosat.  Bill Amount/Jumlah Tagihan  Bill Amount adalah jumlah tagihan yang dikirim kepada pihak biller (pascabayar) atau biaya yang dibayarkan oleh pelanggan (prabayar). Untuk produk pascabayar, Bill Amount selalu  0  (nol). Untuk produk prabayar, nilai tagihannya adalah nominal prabayarnya.  Admin Fee/Biaya Transaksi  Admin Fee adalah biaya admin/fee transaksi sebagai biaya jasa kepada agen/mitra switching. Untuk produk Pascabayar, Biaya Admin ditambahkan ke nilai tagihan (fee eksklusif atau di luar nilai tagihan). Namun untuk produk prabayar, biasanya Admin Fee sudah termasuk dalam nominal prabayarnya (fee inklusif).  Diskon Channel  Diskon Channel adalah potongan yang diberikan kepada pelanggan untuk mengurangi nilai Total Bayar.  Agent Fee  Agent Fee adalah potongan yang diberikan kepada agen/mitra. Agent Fee diberikan langsung pada saat transaksi sehingga deposit yang dipotong lebih kecil dari nilai Total Bayar.  Total Bayar (Consumer)  Total Bayar adalah nilai yang dibayarkan pelanggan kepada agen/mitra. Untuk produk prabayar, ini adalah Harga Jual. Total Bayar untuk produk Pasca Bayar. Nilainya mengikuti persamaan berikut:  Total Bayar = Jumlah Tagihan + Admin Fee - Diskon Channel  Total Debit (Agen)  Agent Price adalah nilai deposit yang dipotong untuk tiap transaksi. Nilainya mengikuti persamaan berikut:  Total Debit = Total Bayar - Agent Fee  atau dalam bentuk lainnya:  Total Debit = Jumlah Tagihan + Admin Fee - Diskon Channel - Agent Fee", 
            "title": "Produk"
        }, 
        {
            "location": "/userguide/#transaksi", 
            "text": "Transaksi melalui REST API dilakukan dengan pola request-response. Untuk produk pascabayar dilakukan dengan 2 langkah yaitu  inquiry  kemudian  payment . Untuk produk prabayar/pembelian, dilakukan dengan 1 langkah saja yaitu  payment .  Inquiry  Fungsi  inquiry  adalah melakukan cek tagihan terakhir untuk pelanggan tertentu dan biller tertentu. Jika ada tagihan, maka fungsi  inquiry  akan memberikan respon berisi data tagihan yang harus dibayar. Bagi pelanggan yang ada tunggakan tagihan, maka  inquiry  menghasilkan lebih dari 1 tagihan.  Fungsi  inquiry  tidak memotong saldo mitra/agen.  Payment  Fungsi  payment  adalah melakukan pembayaran kepada billers untuk pelanggan tersebut sehingga status pembayaran menjadi lunas. Nilai transaksinya sesuai dengan total jumlah tagihan termasuk tunggakan.  Receipt  Jika pembayaran berhasil dilakukan, maka pelanggan dapat menerima receipt/struk pembayarannya. Data receipt dikirim bersama respon fungsi  payment . Namun jika dibutuhkan fungsi  receipt  dapat digunakan untuk memperoleh data receipt/pembayaran.", 
            "title": "Transaksi"
        }, 
        {
            "location": "/userguide/#helpdesk", 
            "text": "Jika Anda mengalami kendala dalam menggunakan layanan ini, kami menyediakan helpdesk yang bisa Anda akses melalui akun Anda.  Resolusi Transaksi  Untuk setiap transaksi yang suspect, sistem kami secara otomatis melakukan resolusi ke pihak billers. Namun jika dibutuhkan, silakan gunakan menu Resolusi Transaksi untuk menyelesaikan permasalahan yang berkaitan dengan transaksi.  Tiket  Jika Anda membutuhkan bantuan atau konsultasi, silakan gunakan menu tiket Helpdesk kami.", 
            "title": "Helpdesk"
        }, 
        {
            "location": "/api/", 
            "text": "Payment Gateway API v1\n\n\nIni adalah dokumentasi API (Application Programming Interface) versi 1.0 (beta). Dalam tahap pengembangan.\n\n\nEnd Point\n\n\nKami menyediakan 2 macam API End Point yaitu sandbox untuk testing dan live untuk production.\n\n\n\n\nProduction: \nhttps://api.paymentgateway.id/v1\n\n\nSandbox: \nhttps://api-sandbox.paymentgateway.id/v1\n\n\n\n\nOtentikasi\n\n\nSetiap request diotentikasi menggunakan 2 buah key yaitu \nAccess Key\n \n \nSecret Key\n. Anda bisa mendapatkan kedua key tersebut dengan membuat akun terlebih dahulu.\n\n\nDalam contoh ini, misalkan Anda sudah memiliki Access Key dan Secret Key sebagai berikut:\n\n\nAccess Key: NDc4NTE1MTY1\n\n\nSecret Key: 0d04ea8a4d3391e929b549add4a22059a5247a39\n\n\nX-API-AccessKey\n\n\nAccess Key dikirim dalam bentuk header \nX-API-AccessKey\n, contoh:\n\n\nX-API-AccessKey: NDc4NTE1MTY1\n\n\nX-API-Timestamp\n\n\nBerikutnya, kirim Date Time dalam bentuk header X-API-Timestamp. Format yang digunakan adalah ISO 8601.\n\n\nContoh:\n\n\nX-API-Timestamp: 2015-06-23T02:51:26+07:00\n\n\nAuthorization\n\n\nAuthorization dikirim dengan format \nAuthorization: signature\n\n\nSignature didapatkan dengan komputasi berikut:\n\n\nsignature = base64(sha256(message, secret_key))\n\n\n\nmessage\n didapatkan dengan menyusun HTTP verb (GET/POST/PUT/DELETE), URI, dan timestamp. Contoh berikut ini untuk \nGET /v1/account\n\n\nMessage: GET/v1/account2015-06-23T02:51:26+07:00\n\n\n\nKemudian enkrip dengan algoritma SHA256 menggunakan Secret Key menjadi Digest.\n\n\nDigest: sha256(\"GET/account20150501180130+07\", \"0d04ea8a4d3391e929b549add4a22059a5247a39\")\n\n\n\ncontoh hasil yang didapatkan:\n\n\nDigest: 40daa06db57fa6b7b5745c01a343dce6394adadb19b7d337182a6dbdf6c733f6\n\n\n\nBuat signature dengan encode digest tersebut dengan base64.\n\n\nSignature = base64('40daa06db57fa6b7b5745c01a343dce6394adadb19b7d337182a6dbdf6c733f6')\n\n\n\nHasilnya dikirim dengan header \nAuthorization\n\n\nAuthorization: NDBkYWEwNmRiNTdmYTZiN2I1NzQ1YzAxYTM0M2RjZTYzOTRhZGFkYjE5YjdkMzM3MTgyYTZkYmRmNmM3MzNmNg==\n\n\n\nContoh request menggunakan CURL sebagai berikut:\n\n\ncurl -H \nX-API-AccessKey: NDc4NTE1MTY1\n\n     -H \nX-API-Timestamp: 2015-06-23T02:51:26+07:00\n\\n\n     -H \nAuthorization: NDBkYWEwNmRiNTdmYTZiN2I1NzQ1YzAxYTM0M2RjZTYzOTRhZGFkYjE5YjdkMzM3MTgyYTZkYmRmNmM3MzNmNg==\n\\n\n     -v https://api-sandbox.paymentgateway.id/v1/\n\n\n\n\nStatus \n Error\n\n\nAPI kami menggunakan HTTP Status Code untuk menunjukkan apakah request Anda berhasil atau gagal.\n\n\n\n\n\n\n\n\nStatus\n\n\nKeterangan\n\n\nPenyebab\n\n\n\n\n\n\n\n\n\n\n200\n\n\nOK\n\n\nRequest berhasil dieksekusi\n\n\n\n\n\n\n400\n\n\nBad Request\n\n\nParameter tidak lengkap\n\n\n\n\n\n\n401\n\n\nUnauthorized\n\n\nAPI Key/Signature tidak valid\n\n\n\n\n\n\n402\n\n\nRequest Failed\n\n\nParameter valid tapi request gagal\n\n\n\n\n\n\n404\n\n\nNot found\n\n\nRequest tidak valid/tidak ditemukan\n\n\n\n\n\n\n50x\n\n\nServer error\n\n\nAda kesalahan di sisi backend kami\n\n\n\n\n\n\n\n\nUntuk status code 40x \n 50x, detail error diberikan dalam format JSON\n\n\nError\n\n\n{\n    \"error\": true,\n    \"error_code\": 2,\n    \"error_msg\": \"Authentication failed, invalid signature.\"\n}\n\n\n\nCek Autentikasi\n\n\nRequest: \nGET /v1/\n\n\nResponse:\n\n\nSuccess\n\n\n{\n    \"message\": \"Authentication successful\"\n}\n\n\n\nAccount\n\n\nInformasi Akun\n\n\nRequest: \nGET /v1/account\n\n\nResponse:\n\n\nSuccess\n\n\n{\n    \"username\": \"ilhamrizqi\",\n    \"email\": \"ilhamrizqi@gmail.com\",\n    \"dateregister\": \"2015-05-31 13:37:18.880653+07\",\n    \"timelastlogin\": null,\n    \"enabled\": \"1\",\n    \"balance\": \"0\",\n    \"status\": \"0\",\n    \"company_name\": \"\",\n    \"company_url\": \"\",\n    \"company_akte\": \"\",\n    \"company_siup\": \"\",\n    \"company_tdp\": \"\",\n    \"company_npwp\": \"\",\n    \"company_street\": \"\",\n    \"company_village\": \"\",\n    \"company_subdistrict\": \"\",\n    \"company_city\": \"\",\n    \"company_province\": \"\",\n    \"company_zip\": \"\",\n    \"company_country\": \"\",\n    \"company_phone\": \"\",\n    \"company_fax\": \"\",\n    \"owner_ktp\": \"\",\n    \"owner_sex\": \" \",\n    \"owner_npwp\": \"\",\n    \"owner_fullname\": \"\",\n    \"owner_birthplace\": \"\",\n    \"owner_birthdate\": null,\n    \"owner_street\": \"\",\n    \"owner_village\": \"\",\n    \"owner_subdistrict\": \"\",\n    \"owner_city\": \"\",\n    \"owner_province\": \"\",\n    \"owner_zip\": \"\",\n    \"owner_country\": \"\",\n    \"owner_phone\": \"\",\n    \"owner_fax\": \"\",\n    \"owner_mobile\": \"\"\n}\n\n\n\nCek Saldo\n\n\nFungsi Cek Saldo ini adalah bentuk sederhana dari Cek Akun di atas.\n\n\nRequest: \nGET /v1/account/balance\n\n\nResponse:\n\n\nSuccess\n\n\n{\n    \"balance\": \"0\"\n}\n\n\n\nBillers\n\n\nList Billers\n\n\nRequest: \nGET /v1/billers\n\n\nResponse:\n\n\nSuccess\n\n\n[\n    {\n        \"billerid\":\"adira\",\n        \"billername\":\"Adira Finance\",\n        \"enabled\":\"1\",\n        \"status\":\"0\"\n    },\n    {\n        \"billerid\":\"esia\",\n        \"billername\":\"Esia\",\n        \"enabled\":\"1\",\n        \"status\":\"0\"\n    },\n    {\n        \"billerid\":\"isat\",\n        \"billername\":\"Indosat\",\n        \"enabled\":\"1\",\n        \"status\":\"0\"\n    }\n]\n\n\n\nBiller Info\n\n\nRequest: \nGET /v1/billers/:billerid\n\n\nResponse:\n\n\nSuccess\n\n\n{\n    \"billerid\": \"esia\",\n    \"billername\": \"Esia\",\n    \"enabled\": \"1\",\n    \"status\": \"0\"\n}\n\n\n\nProducts\n\n\nRequest: \nGET /v1/products\n\n\nResponse:\n\n\nSuccess\n\n\n[\n    {\n        \"productid\":\"esia-reg-10\",\n        \"productname\":\"Esia Reguler 10k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:46:45.233558+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"10000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"11000\",\n        \"totalagent\":\"10500\"\n    },\n    {\n        \"productid\":\"esia-reg-100\",\n        \"productname\":\"Esia Reguler 100k\",\n        \"enabled\":\"1\",\"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:48:16.344662+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"100000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"101000\",\n        \"totalagent\":\"100500\"\n    },\n    {\n        \"productid\":\"esia-reg-25\",\n        \"productname\":\"Esia Reguler 25k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:47:10.490737+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"25000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"26000\",\n        \"totalagent\":\"25500\"\n    },\n    {\n        \"productid\":\"esia-reg-5\",\n        \"productname\":\"Esia Reguler 5k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:45:58.281926+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"5000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"6000\",\n        \"totalagent\":\"5500\"\n    },\n    {\n        \"productid\":\"esia-reg-50\",\n        \"productname\":\"Esia Reguler 50k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:47:50.875541+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"50000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"51000\",\n        \"totalagent\":\"50500\"\n    }\n]\n\n\n\nCek Produk\n\n\nRequest: \nGET /v1/products/:productid\n\n\nResponse:\n\n\nSuccess\n\n\n{\n    \"productid\": \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"enabled\": \"1\",\n    \"status\": \"0\",\n    \"lastupdate\": \"2015-05-24 23:18:38.320039+07\",\n    \"category\": \"payment\",\n    \"billerid\": \"pln\",\n    \"billamount\": \"0\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"0\",\n    \"agentfee\": \"2000\",\n    \"totalconsumer\": \"2500\",\n    \"totalagent\": \"500\"\n}\n\n\n\nTransaction\n\n\nInquiry\n\n\nRequest: \nPOST /v1/inquiry\n\n\n{\n    \"productid\": \"pln-2500\",\n    \"customerid\": \"30232321321\"\n}\n\n\n\nResponse:\n\n\nSuccess\n\n\n{\n    \"result\": 0,\n    \"message\": \"Inquiry Success\",\n    \"timestamp\": \"20150605090403+07\",       \n    \"productid\":  \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"billamount\": \"500000\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"2500\",\n    \"agentfee\": \"2300\",\n    \"totalconsumer\": \"502500\",\n    \"totalagent\": \"500200\",\n    \"invoiceid\": \"9803423121\",\n    \"invoicecount\": 1,\n    \"invoices\":\n    [\n        {\n            // data invoice di sini\n        }\n    ]\n}\n\n\n\nRequest: \nPOST /v1/payment\n\n\n{\n    \"refid\": \"959834734\",\n    \"productid\": \"pln-2500\",\n    \"customerid\": \"30232321321\",\n    \"invoiceid\": \"9803423121\"\n}\n\n\n\nResponse:\n\n\n{\n    \"result\": 0,\n    \"message\": \"Payment Success\",\n    \"timestamp\": \"20150605090403+07\",\n    \"paymentid\": \"9803423121\",\n    \"productid\":  \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"billamount\": \"500000\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"2500\",\n    \"agentfee\": \"2300\",\n    \"totalconsumer\": \"502500\",\n    \"totalagent\": \"500200\",\n    \"balancbefore\": \"1000000\",\n    \"balanceafter\": \"499800\",\n    \"invoiceid\": \"9803423121\",\n    \"invoicecount\": 1,\n    \"invoices\":\n    [\n        {\n            // data invoice di sini\n        }\n    ]\n}\n\n\n\nRequest: \nGET /v1/payment/:paymentid\n\n\nResponse:\n\n\n{\n    \"result\": 0,\n    \"message\": \"Payment Success\",\n    \"timestamp\": \"20150605090403+07\",\n    \"paymentid\": \"9803423121\",\n    \"productid\":  \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"billamount\": \"500000\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"2500\",\n    \"agentfee\": \"2300\",\n    \"totalconsumer\": \"502500\",\n    \"totalagent\": \"500200\",\n    \"balancbefore\": \"1000000\",\n    \"balanceafter\": \"499800\",\n    \"invoiceid\": \"9803423121\",\n    \"invoicecount\": 1,\n    \"invoices\":\n    [\n        {\n            // data invoice di sini\n        }\n    ]\n}\n\n\n\nPenjelasan\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrefid\n\n\nstring[32]\n\n\nKode transaksi agen\n\n\n\n\n\n\ncustomerid\n\n\nstring[20]\n\n\nID Pelanggan. Untuk seluler, nomor handphone.\n\n\n\n\n\n\nresult\n\n\ninteger\n\n\nLihat Result Codes\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\nPesan tambahan\n\n\n\n\n\n\ntimestamp\n\n\nstring\n\n\nDate Time ISO8601\n\n\n\n\n\n\nproductid\n\n\nstring\n\n\nKode Produk\n\n\n\n\n\n\nproductname\n\n\nstring\n\n\nNama Produk\n\n\n\n\n\n\nbillamount\n\n\nnumeric\n\n\nNilai tagihan\n\n\n\n\n\n\nadminfee\n\n\nnumeric\n\n\nBiaya Admin\n\n\n\n\n\n\ndiscount\n\n\nnumeric\n\n\nDiskon Channel\n\n\n\n\n\n\nagentfee\n\n\nnumeric\n\n\nFee untuk Agen\n\n\n\n\n\n\ntotalconsumer\n\n\nnumeric\n\n\nTotal yang dibayarkan pelanggan\n\n\n\n\n\n\ntotalagent\n\n\nnumeric\n\n\nTotal yang dibayarkan agen\n\n\n\n\n\n\nbalancebefore\n\n\nnumeric\n\n\nSaldo awal agen\n\n\n\n\n\n\nbalanceafter\n\n\nnumeric\n\n\nSaldo akhir agen\n\n\n\n\n\n\ninvoiceid\n\n\nstring\n\n\nNomor Invoice\n\n\n\n\n\n\ninvoicecount\n\n\ninteger\n\n\nJumlah tagihan/tunggakan\n\n\n\n\n\n\ninvoices\n\n\narray\n\n\nData tagihan\n\n\n\n\n\n\n\n\nResult Codes\n\n\n\n\n\n\n\n\nResult Code\n\n\nDescription\n\n\nAction\n\n\n\n\n\n\n\n\n\n\n0\n\n\nSuccess\n\n\n-\n\n\n\n\n\n\n1\n\n\nFailed - Invalid Key\n\n\nChange Access Key\n\n\n\n\n\n\n2\n\n\nFailed - Invalid Signature\n\n\nFix Signature\n\n\n\n\n\n\n3\n\n\nFailed - Account disabled\n\n\nContact our Helpdesk\n\n\n\n\n\n\n4\n\n\nFailed - Duplicated Ref ID\n\n\nUse another Ref ID\n\n\n\n\n\n\n5\n\n\nFailed - Invalid Product ID\n\n\nFix Product ID\n\n\n\n\n\n\n6\n\n\nFailed - Product Offline\n\n\nDo not use\n\n\n\n\n\n\n7\n\n\nFailed - Invalid Biller ID\n\n\nDo not use\n\n\n\n\n\n\n8\n\n\nFailed - Biller Offline\n\n\nDo not use\n\n\n\n\n\n\n9\n\n\nFailed - Gateway not found\n\n\nDo not use\n\n\n\n\n\n\n10\n\n\nFailed - Gateway Offline\n\n\nDo not use\n\n\n\n\n\n\n11\n\n\nFailed - Invalid Customer ID\n\n\nFix Customer ID\n\n\n\n\n\n\n12\n\n\nFailed - Not enough balance\n\n\nTopup Deposit\n\n\n\n\n\n\n13\n\n\nFailed - Timeout\n\n\nRetry 10 minutes\n\n\n\n\n\n\n14\n\n\nFailed - Invoice not found\n\n\n-\n\n\n\n\n\n\n15\n\n\nFailed - Invalid Ref ID\n\n\nUse another Ref ID\n\n\n\n\n\n\n254\n\n\nFailed - System Maintenance\n\n\nRetry 1 hour\n\n\n\n\n\n\n255\n\n\nFailed - Unknown\n\n\nDo not use", 
            "title": "API"
        }, 
        {
            "location": "/api/#payment-gateway-api-v1", 
            "text": "Ini adalah dokumentasi API (Application Programming Interface) versi 1.0 (beta). Dalam tahap pengembangan.", 
            "title": "Payment Gateway API v1"
        }, 
        {
            "location": "/api/#end-point", 
            "text": "Kami menyediakan 2 macam API End Point yaitu sandbox untuk testing dan live untuk production.   Production:  https://api.paymentgateway.id/v1  Sandbox:  https://api-sandbox.paymentgateway.id/v1", 
            "title": "End Point"
        }, 
        {
            "location": "/api/#otentikasi", 
            "text": "Setiap request diotentikasi menggunakan 2 buah key yaitu  Access Key     Secret Key . Anda bisa mendapatkan kedua key tersebut dengan membuat akun terlebih dahulu.  Dalam contoh ini, misalkan Anda sudah memiliki Access Key dan Secret Key sebagai berikut:  Access Key: NDc4NTE1MTY1  Secret Key: 0d04ea8a4d3391e929b549add4a22059a5247a39  X-API-AccessKey  Access Key dikirim dalam bentuk header  X-API-AccessKey , contoh:  X-API-AccessKey: NDc4NTE1MTY1  X-API-Timestamp  Berikutnya, kirim Date Time dalam bentuk header X-API-Timestamp. Format yang digunakan adalah ISO 8601.  Contoh:  X-API-Timestamp: 2015-06-23T02:51:26+07:00  Authorization  Authorization dikirim dengan format  Authorization: signature  Signature didapatkan dengan komputasi berikut:  signature = base64(sha256(message, secret_key))  message  didapatkan dengan menyusun HTTP verb (GET/POST/PUT/DELETE), URI, dan timestamp. Contoh berikut ini untuk  GET /v1/account  Message: GET/v1/account2015-06-23T02:51:26+07:00  Kemudian enkrip dengan algoritma SHA256 menggunakan Secret Key menjadi Digest.  Digest: sha256(\"GET/account20150501180130+07\", \"0d04ea8a4d3391e929b549add4a22059a5247a39\")  contoh hasil yang didapatkan:  Digest: 40daa06db57fa6b7b5745c01a343dce6394adadb19b7d337182a6dbdf6c733f6  Buat signature dengan encode digest tersebut dengan base64.  Signature = base64('40daa06db57fa6b7b5745c01a343dce6394adadb19b7d337182a6dbdf6c733f6')  Hasilnya dikirim dengan header  Authorization  Authorization: NDBkYWEwNmRiNTdmYTZiN2I1NzQ1YzAxYTM0M2RjZTYzOTRhZGFkYjE5YjdkMzM3MTgyYTZkYmRmNmM3MzNmNg==  Contoh request menggunakan CURL sebagai berikut:  curl -H  X-API-AccessKey: NDc4NTE1MTY1 \n     -H  X-API-Timestamp: 2015-06-23T02:51:26+07:00 \\n\n     -H  Authorization: NDBkYWEwNmRiNTdmYTZiN2I1NzQ1YzAxYTM0M2RjZTYzOTRhZGFkYjE5YjdkMzM3MTgyYTZkYmRmNmM3MzNmNg== \\n\n     -v https://api-sandbox.paymentgateway.id/v1/", 
            "title": "Otentikasi"
        }, 
        {
            "location": "/api/#status-error", 
            "text": "API kami menggunakan HTTP Status Code untuk menunjukkan apakah request Anda berhasil atau gagal.     Status  Keterangan  Penyebab      200  OK  Request berhasil dieksekusi    400  Bad Request  Parameter tidak lengkap    401  Unauthorized  API Key/Signature tidak valid    402  Request Failed  Parameter valid tapi request gagal    404  Not found  Request tidak valid/tidak ditemukan    50x  Server error  Ada kesalahan di sisi backend kami     Untuk status code 40x   50x, detail error diberikan dalam format JSON  Error  {\n    \"error\": true,\n    \"error_code\": 2,\n    \"error_msg\": \"Authentication failed, invalid signature.\"\n}  Cek Autentikasi  Request:  GET /v1/  Response:  Success  {\n    \"message\": \"Authentication successful\"\n}", 
            "title": "Status  Error"
        }, 
        {
            "location": "/api/#account", 
            "text": "Informasi Akun  Request:  GET /v1/account  Response:  Success  {\n    \"username\": \"ilhamrizqi\",\n    \"email\": \"ilhamrizqi@gmail.com\",\n    \"dateregister\": \"2015-05-31 13:37:18.880653+07\",\n    \"timelastlogin\": null,\n    \"enabled\": \"1\",\n    \"balance\": \"0\",\n    \"status\": \"0\",\n    \"company_name\": \"\",\n    \"company_url\": \"\",\n    \"company_akte\": \"\",\n    \"company_siup\": \"\",\n    \"company_tdp\": \"\",\n    \"company_npwp\": \"\",\n    \"company_street\": \"\",\n    \"company_village\": \"\",\n    \"company_subdistrict\": \"\",\n    \"company_city\": \"\",\n    \"company_province\": \"\",\n    \"company_zip\": \"\",\n    \"company_country\": \"\",\n    \"company_phone\": \"\",\n    \"company_fax\": \"\",\n    \"owner_ktp\": \"\",\n    \"owner_sex\": \" \",\n    \"owner_npwp\": \"\",\n    \"owner_fullname\": \"\",\n    \"owner_birthplace\": \"\",\n    \"owner_birthdate\": null,\n    \"owner_street\": \"\",\n    \"owner_village\": \"\",\n    \"owner_subdistrict\": \"\",\n    \"owner_city\": \"\",\n    \"owner_province\": \"\",\n    \"owner_zip\": \"\",\n    \"owner_country\": \"\",\n    \"owner_phone\": \"\",\n    \"owner_fax\": \"\",\n    \"owner_mobile\": \"\"\n}  Cek Saldo  Fungsi Cek Saldo ini adalah bentuk sederhana dari Cek Akun di atas.  Request:  GET /v1/account/balance  Response:  Success  {\n    \"balance\": \"0\"\n}", 
            "title": "Account"
        }, 
        {
            "location": "/api/#billers", 
            "text": "List Billers  Request:  GET /v1/billers  Response:  Success  [\n    {\n        \"billerid\":\"adira\",\n        \"billername\":\"Adira Finance\",\n        \"enabled\":\"1\",\n        \"status\":\"0\"\n    },\n    {\n        \"billerid\":\"esia\",\n        \"billername\":\"Esia\",\n        \"enabled\":\"1\",\n        \"status\":\"0\"\n    },\n    {\n        \"billerid\":\"isat\",\n        \"billername\":\"Indosat\",\n        \"enabled\":\"1\",\n        \"status\":\"0\"\n    }\n]  Biller Info  Request:  GET /v1/billers/:billerid  Response:  Success  {\n    \"billerid\": \"esia\",\n    \"billername\": \"Esia\",\n    \"enabled\": \"1\",\n    \"status\": \"0\"\n}", 
            "title": "Billers"
        }, 
        {
            "location": "/api/#products", 
            "text": "Request:  GET /v1/products  Response:  Success  [\n    {\n        \"productid\":\"esia-reg-10\",\n        \"productname\":\"Esia Reguler 10k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:46:45.233558+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"10000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"11000\",\n        \"totalagent\":\"10500\"\n    },\n    {\n        \"productid\":\"esia-reg-100\",\n        \"productname\":\"Esia Reguler 100k\",\n        \"enabled\":\"1\",\"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:48:16.344662+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"100000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"101000\",\n        \"totalagent\":\"100500\"\n    },\n    {\n        \"productid\":\"esia-reg-25\",\n        \"productname\":\"Esia Reguler 25k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:47:10.490737+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"25000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"26000\",\n        \"totalagent\":\"25500\"\n    },\n    {\n        \"productid\":\"esia-reg-5\",\n        \"productname\":\"Esia Reguler 5k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:45:58.281926+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"5000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"6000\",\n        \"totalagent\":\"5500\"\n    },\n    {\n        \"productid\":\"esia-reg-50\",\n        \"productname\":\"Esia Reguler 50k\",\n        \"enabled\":\"1\",\n        \"status\":\"0\",\n        \"lastupdate\":\"2015-05-24 23:47:50.875541+07\",\n        \"category\":\"prepaid\",\n        \"billerid\":\"esia\",\n        \"billamount\":\"50000\",\n        \"adminfee\":\"1000\",\n        \"discount\":\"0\",\n        \"agentfee\":\"500\",\n        \"totalconsumer\":\"51000\",\n        \"totalagent\":\"50500\"\n    }\n]  Cek Produk  Request:  GET /v1/products/:productid  Response:  Success  {\n    \"productid\": \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"enabled\": \"1\",\n    \"status\": \"0\",\n    \"lastupdate\": \"2015-05-24 23:18:38.320039+07\",\n    \"category\": \"payment\",\n    \"billerid\": \"pln\",\n    \"billamount\": \"0\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"0\",\n    \"agentfee\": \"2000\",\n    \"totalconsumer\": \"2500\",\n    \"totalagent\": \"500\"\n}", 
            "title": "Products"
        }, 
        {
            "location": "/api/#transaction", 
            "text": "Inquiry  Request:  POST /v1/inquiry  {\n    \"productid\": \"pln-2500\",\n    \"customerid\": \"30232321321\"\n}  Response:  Success  {\n    \"result\": 0,\n    \"message\": \"Inquiry Success\",\n    \"timestamp\": \"20150605090403+07\",       \n    \"productid\":  \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"billamount\": \"500000\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"2500\",\n    \"agentfee\": \"2300\",\n    \"totalconsumer\": \"502500\",\n    \"totalagent\": \"500200\",\n    \"invoiceid\": \"9803423121\",\n    \"invoicecount\": 1,\n    \"invoices\":\n    [\n        {\n            // data invoice di sini\n        }\n    ]\n}  Request:  POST /v1/payment  {\n    \"refid\": \"959834734\",\n    \"productid\": \"pln-2500\",\n    \"customerid\": \"30232321321\",\n    \"invoiceid\": \"9803423121\"\n}  Response:  {\n    \"result\": 0,\n    \"message\": \"Payment Success\",\n    \"timestamp\": \"20150605090403+07\",\n    \"paymentid\": \"9803423121\",\n    \"productid\":  \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"billamount\": \"500000\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"2500\",\n    \"agentfee\": \"2300\",\n    \"totalconsumer\": \"502500\",\n    \"totalagent\": \"500200\",\n    \"balancbefore\": \"1000000\",\n    \"balanceafter\": \"499800\",\n    \"invoiceid\": \"9803423121\",\n    \"invoicecount\": 1,\n    \"invoices\":\n    [\n        {\n            // data invoice di sini\n        }\n    ]\n}  Request:  GET /v1/payment/:paymentid  Response:  {\n    \"result\": 0,\n    \"message\": \"Payment Success\",\n    \"timestamp\": \"20150605090403+07\",\n    \"paymentid\": \"9803423121\",\n    \"productid\":  \"pln-2500\",\n    \"productname\": \"PLN Admin 2500\",\n    \"billamount\": \"500000\",\n    \"adminfee\": \"2500\",\n    \"discount\": \"2500\",\n    \"agentfee\": \"2300\",\n    \"totalconsumer\": \"502500\",\n    \"totalagent\": \"500200\",\n    \"balancbefore\": \"1000000\",\n    \"balanceafter\": \"499800\",\n    \"invoiceid\": \"9803423121\",\n    \"invoicecount\": 1,\n    \"invoices\":\n    [\n        {\n            // data invoice di sini\n        }\n    ]\n}  Penjelasan     Field  Type  Description      refid  string[32]  Kode transaksi agen    customerid  string[20]  ID Pelanggan. Untuk seluler, nomor handphone.    result  integer  Lihat Result Codes    message  string  Pesan tambahan    timestamp  string  Date Time ISO8601    productid  string  Kode Produk    productname  string  Nama Produk    billamount  numeric  Nilai tagihan    adminfee  numeric  Biaya Admin    discount  numeric  Diskon Channel    agentfee  numeric  Fee untuk Agen    totalconsumer  numeric  Total yang dibayarkan pelanggan    totalagent  numeric  Total yang dibayarkan agen    balancebefore  numeric  Saldo awal agen    balanceafter  numeric  Saldo akhir agen    invoiceid  string  Nomor Invoice    invoicecount  integer  Jumlah tagihan/tunggakan    invoices  array  Data tagihan", 
            "title": "Transaction"
        }, 
        {
            "location": "/api/#result-codes", 
            "text": "Result Code  Description  Action      0  Success  -    1  Failed - Invalid Key  Change Access Key    2  Failed - Invalid Signature  Fix Signature    3  Failed - Account disabled  Contact our Helpdesk    4  Failed - Duplicated Ref ID  Use another Ref ID    5  Failed - Invalid Product ID  Fix Product ID    6  Failed - Product Offline  Do not use    7  Failed - Invalid Biller ID  Do not use    8  Failed - Biller Offline  Do not use    9  Failed - Gateway not found  Do not use    10  Failed - Gateway Offline  Do not use    11  Failed - Invalid Customer ID  Fix Customer ID    12  Failed - Not enough balance  Topup Deposit    13  Failed - Timeout  Retry 10 minutes    14  Failed - Invoice not found  -    15  Failed - Invalid Ref ID  Use another Ref ID    254  Failed - System Maintenance  Retry 1 hour    255  Failed - Unknown  Do not use", 
            "title": "Result Codes"
        }
    ]
}